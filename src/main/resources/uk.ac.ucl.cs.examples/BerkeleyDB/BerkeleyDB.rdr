Model BerkeleyDB;

Objective Max ExpectedNetBenefit = EV (NB);
Objective Min ExpectedFeatureSize = EV (TotalFeatureSize);

// ===============Modelling Net Benefit==============

NB = Revenue - TotalFeatureCost;

Revenue = deterministic (1000);

TotalFeatureCost =  FeatureIndexesCost
			+ NonMandatoryFeaturesCost;

NonMandatoryFeaturesCost = decision-subset (+) ("Non Mandatory Feature"){
	"Statistics" :  deterministic (250);
	"Cryptography" :  deterministic (300);
	"Replication" : deterministic (200);
	"Verification" : deterministic (100);
	"Diagnostic" : deterministic (300);
	"Sequence" : deterministic (50);
}

FeatureIndexesCost =  CostOfFeatureIndex +  FeatureIndexesSubFeatureCost;
CostOfFeatureIndex = deterministic (1);
FeatureIndexesSubFeatureCost = FeatureBTreeCost + NonMandatoryIndexSubFeatureCosts;
FeatureBTreeCost = decision ("B-Tree"){
	"B-Tree Fast" :  deterministic (50);
	"B-Tree Small" : deterministic (75);
}
NonMandatoryIndexSubFeatureCosts = decision-subset(+)("Index  Non Mandatory SubFeatures"){
	"Hash" : deterministic (125);
	"Queue" : deterministic (50);
}

// ===============Modelling Feature SIze==============

TotalFeatureSize =  FeatureIndexesSIze
			+ NonMandatoryFeaturesSIze;

NonMandatoryFeaturesSIze = decision-subset (+) ("Non Mandatory Feature"){
	"Statistics" :  deterministic (285);
	"Cryptography" :  deterministic (19);
	"Replication" : deterministic (89);
	"Verification" : deterministic (50);
	"Diagnostic" : deterministic (191);
	"Sequence" : deterministic (50);
}

FeatureIndexesSIze =  SIzeOfFeatureIndex +  FeatureIndexesSubFeatureSIze;
SIzeOfFeatureIndex = deterministic (1);
FeatureIndexesSubFeatureSIze = FeatureBTreeSIze + NonMandatoryIndexSubFeatureSIzes;
FeatureBTreeSIze = decision ("B-Tree"){
	"B-Tree Fast" :  deterministic (1800);
	"B-Tree Small" : deterministic (340);
}
NonMandatoryIndexSubFeatureSIzes = decision-subset(+)("Index  Non Mandatory SubFeatures"){
	"Hash" : deterministic (113);
	"Queue" : deterministic (58);
}
